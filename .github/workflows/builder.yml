# This workflow will build a Swift project



name: release builder


on:

  # push:
  #   tags: '*'
  
  workflow_dispatch:
    inputs:
      tag:
        description: 'input new release tag'
        required: true
        type: string




jobs:
  toolchainBuild:
    #needs: mainjob1
    runs-on: macOS-13
    # runs-on: self-hosted
    permissions:
        contents: write
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
      - uses: actions/checkout@v4
        # with:
        #   ref: generate
  
    #   - name: retrieve output
    #     run: |
    #       echo "${{ needs.mainjob1.outputs.version }}"
    #       echo "${{ needs.mainjob1.outputs.sha }}"

      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: install kivy-ios
        run: |
          python3 -m pip install --upgrade pip
          pip3 install https://github.com/kivy/kivy-ios/archive/master.zip
          #brew install autoconf automake libtool pkg-config
          #brew link libtool
          
          chmod 755 restructure.sh
          mkdir kivy_build

      - name: toolchain build python3 kivy pillow
        run: |
          cd kivy_build 
          toolchain build python3
          toolchain build kivy
          toolchain build pillow

      # - name: copy build
      #   run: cp -rf ../../../kivy_build ./

      
      - name: repack build environment
        run: ./restructure.sh
      
      - uses: actions/upload-artifact@v3
        with:
          name: kivy-output
          path: ./output
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: pylib-output
      #     path: ./pylib/python_lib.zip

  create_package:
    name: Create Package
    runs-on: ubuntu-latest
    needs: [toolchainBuild]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: pythonswiftlink/KivySwiftLink
      - uses: actions/download-artifact@v3
        with:
          name: kivy-output
      - run: |
            chmod 755 create_package.sh
            ./create_package.sh
            #zip -r package.zip Kivy-iOS-Package/*
            #zip -r python_lib.zip python_lib/*
      
      - name: Push to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.Homebrew }}
        with:
          source-directory: 'KivySwiftLink'
          destination-github-username: 'pythonswiftlink'
          destination-repository-name: 'kivyswiftlink'
          user-email: pythonswiftlink@gmail.com
          target-branch: master

      #- uses: actions/checkout@v4
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "python_lib.zip, dist_lib.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: KivySwiftLink
          token: ${{ secrets.Homebrew }}
          allowUpdates: true
