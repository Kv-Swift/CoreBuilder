name: Release Components


on:

  workflow_call:
    inputs:
      tag:
        required: false
        type: string
        default: "311.0.0"
      lastest:
        required: false
        type: boolean
        default: false
    secrets:
      token:
        required: true


jobs:
  create_package:
    name: Release Packages
    runs-on: ubuntu-latest
  #needs: [toolchainBuild]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/download-artifact@v4
        with:
          name: release-output

      - name: list files
        shell: bash
        run: ls

      # - name: release packages
      #   uses: kivyswiftlink/actions/release_packages@master
      #   with:
      #     token: ${{ github.event.inputs.lastest }}
      #     tag: ${{ github.event.inputs.tag }}
      #     lastest: ${{ github.event.inputs.lastest }}
      


      ################################################################################################
      #                             releases
      ################################################################################################
      - name: create PythonCore
        shell: bash
        run: |
            git clone https://github.com/pythonswiftlink/PythonCore.git _PythonCore
            mkdir -p PythonCore/Sources

            cp -rf _PythonCore/Sources/PythonCore PythonCore/Sources/
            cp -rf _PythonCore/Sources/PythonExtra PythonCore/Sources/
            cp -rf package_templates/cores/PythonLibrary PythonCore/Sources/
            cp -f python3/Package.swift PythonCore/
            #cp -rf package_templates/cores/PythonCore/Sources/PythonCore PythonCore/Sources/

            mv -f python3/lib PythonCore/Sources/PythonLibrary/


      # commit new package to kivypythoncore/master
      - name: commit Kivy PythonCore to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
            API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
            source-directory: 'PythonCore/export/PythonCore'
            destination-github-username: 'kivyswiftlink'
            destination-repository-name: 'PythonCore'
            user-email: kivyswiftlink@gmail.com
            target-branch: master

      - name: releasePythonCore
        uses: ncipollo/release-action@v1
        with:
          artifacts: "
            PythonCore/dist_files.zip,
            PythonCore/xcframeworks/*.zip
            "
          tag: ${{ github.event.inputs.tag }}
          repo: PythonCore
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}







      ############# ImageCore ###############
      # commit new package to kivyswiftlink/master
      - name: commit libpng to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
          source-directory: 'ImageCore/export/ImageCore'
          destination-github-username: 'kivyswiftlink'
          destination-repository-name: 'ImageCore'
          user-email: kivyswiftlink@gmail.com
          target-branch: master
      
      # create a new release from master and python_lib.zip / dist_lib.zip to the release
      - name: release ImageCore
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ImageCore/xcframeworks/*.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: ImageCore
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}
      ################################################################
      


      




      ############# freetype ###############
      # commit new package to kivyswiftlink/master
      - name: commit libpng to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
          source-directory: 'FreeType/export/FreeType'
          destination-github-username: 'kivyswiftlink'
          destination-repository-name: 'FreeType'
          user-email: kivyswiftlink@gmail.com
          target-branch: master
      
      # create a new release from master and python_lib.zip / dist_lib.zip to the release
      - name: release freetype
        uses: ncipollo/release-action@v1
        with:
          artifacts: "FreeType/xcframeworks/*.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: FreeType
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}
      ################################################################









      ############# SDL2Core ###############
      - name: create SDL2Core
        shell: bash
        run: |
          mkdir -p SDL2Core/Sources
          touch SDL2Core/Sources/SDL2Core.swift
          cp -f sdl2/Package.swift SDL2Core/
          

      # commit new package to kivyswiftlink/master
      - name: commit SDL2Core to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
          source-directory: 'SDL2Core/export/SDL2Core'
          destination-github-username: 'kivyswiftlink'
          destination-repository-name: 'SDL2Core'
          user-email: kivyswiftlink@gmail.com
          target-branch: master
      
      # create a new release from master and python_lib.zip / dist_lib.zip to the release
      - name: release SDL2Core
        uses: ncipollo/release-action@v1
        with:
          artifacts: "SDL2Core/xcframeworks/*.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: SDL2Core
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}
      
      ################################################################
      











      ############# KivyCore ###############
      - name: create KivyCore
        shell: bash
        run: |
          cp -rf package_templates/cores/KivyCore KivyCore
          cp -f kivy/Package.swift KivyCore/
          

      - name: Download a kivy-ios master as asset for release
        shell: bash
        run: |
          git clone https://github.com/kivy/kivy-ios.git
          zip -r kivy-ios.zip kivy-ios
          mv -f kivy-ios.zip KivyCore/

      # commit new package to kivyswiftlink/master
      - name: commit KivyCore to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
          source-directory: 'KivyCore/export/KivyCore'
          destination-github-username: 'kivyswiftlink'
          destination-repository-name: 'KivyCore'
          user-email: kivyswiftlink@gmail.com
          target-branch: master
      
      # create a new release from master and python_lib.zip / dist_lib.zip to the release
      - name: release KivyCore
        uses: ncipollo/release-action@v1
        with:
          artifacts: "KivyCore/dist_files.zip, kivy/site-packages.zip, KivyCore/kivy-ios.zip, KivyCore/xcframeworks/*.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: KivyCore
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}
      
      ################################################################











      ############# KivyNumpy ###############
      - name: create KivyNumpy
        shell: bash
        run: |
          mkdir -p KivyNumpy/Sources/KivyNumpy
          touch KivyNumpy/Sources/KivyNumpy.swift
          cp -f numpy/Package.swift KivyNumpy/

      # commit new package to kivyswiftlink/master
      - name: commit KivyNumpy to master
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.token }}
        with:
          source-directory: 'KivyNumpy/export/KivyNumpy'
          destination-github-username: 'kivyswiftlink'
          destination-repository-name: 'KivyNumpy'
          user-email: kivyswiftlink@gmail.com
          target-branch: master

      # create a new release from master and python_lib.zip / dist_lib.zip to the release
      - name: release KivyNumpy
        uses: ncipollo/release-action@v1
        with:
          artifacts: "KivyNumpy/dist_files.zip, KivyNumpy/site-packages.zip, KivyNumpy/xcframeworks/*.zip"
          tag: ${{ github.event.inputs.tag }}
          repo: KivyNumpy
          token: ${{ secrets.token }}
          allowUpdates: true
          makeLatest: ${{ github.event.inputs.lastest }}

      ################################################################






      # ############# KivyExtra ###############
      # - name: create KivyExtra
      #   shell: bash
      #   run: |
      #     mkdir -p KivyExtra/Sources

      #     mkdir -p KivyExtra/Sources/KiwiSolver
      #     touch KivyExtra/Sources/KiwiSolver/KiwiSolver.swift

      #     mkdir -p KivyExtra/Sources/FFMpeg
      #     touch KivyExtra/Sources/FFMpeg/FFMpeg.swift

      #     mkdir -p KivyExtra/Sources/FFPyplayer
      #     touch KivyExtra/Sources/FFPyplayer/FFPyplayer.swift

      #     mkdir -p KivyExtra/Sources/MatPlotLib
      #     touch KivyExtra/Sources/MatPlotLib/MatPlotLib.swift

      #     mkdir -p KivyExtra/Sources/Pillow
      #     touch KivyExtra/Sources/Pillow/Pillow.swift

      #     cp -f kivyextra/Package.swift KivyExtra/
          

      # # commit new package to kivyswiftlink/master
      # - name: commit KivyExtra to master
      #   uses: cpina/github-action-push-to-another-repository@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.token }}
      #   with:
      #     source-directory: 'KivyExtra'
      #     destination-github-username: 'kivyswiftlink'
      #     destination-repository-name: 'KivyExtra'
      #     user-email: kivyswiftlink@gmail.com
      #     target-branch: master

      # # create a new release from master and python_lib.zip / dist_lib.zip to the release
      # - name: release KivyExtra
      #   uses: ncipollo/release-action@v1
      #   with:
            
      #     artifacts: "
      #       pillow/pillow_dist.zip,
      #       kiwisolver/kiwisolver_dist.zip,
      #       materialyoucolor/materialyoucolor_dist.zip,
      #       matplotlib/matplotlib_dist.zip,
      #       ffmpeg/ffmpeg_dist.zip,
      #       ffpyplayer/ffpyplayer_dist.zip,

      #       pillow/pillow_site.zip,
      #       kiwisolver/kiwisolver_site.zip,
      #       materialyoucolor/materialyoucolor_site.zip,
      #       matplotlib/matplotlib_site.zip,
      #       ffmpeg/ffmpeg_site.zip,
      #       ffpyplayer/ffpyplayer_site.zip,

      #       pillow/xcframework/*.zip,
      #       kiwisolver/xcframework/*.zip,
      #       materialyoucolor/xcframework/*.zip,
      #       matplotlib/xcframework/*.zip,
      #       ffmpeg/xcframework/*.zip,
      #       ffpyplayer/xcframework/*.zip
      #       "
      #     tag: ${{ github.event.inputs.tag }}
      #     repo: KivyExtra
      #     token: ${{ secrets.token }}
      #     allowUpdates: true
      #     makeLatest: ${{ github.event.inputs.lastest }}

